name: Release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.run_number }}
      REGISTRY: cr.yandex/crpcntqudb0hkbbnds00/app

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Ensure on main branch
        run: git checkout main

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm ci
      - run: npm run lint
      - run: npm test

      - name: Create release branch
        run: |
          git checkout -b releases/${{ env.VERSION }}
          git push origin releases/${{ env.VERSION }}

      - name: Build Docker image
        run: |
          docker build -t $REGISTRY:${VERSION} .
          docker tag $REGISTRY:${VERSION} $REGISTRY:${VERSION}_latest

      - name: Login to Yandex Container Registry
        run: echo "${{ secrets.YC_CR_PASSWORD }}" | docker login -u oauth --password-stdin cr.yandex

      - name: Push Docker image
        run: |
          docker push $REGISTRY:${VERSION}
          docker push $REGISTRY:${VERSION}_latest

      - name: Create Git tag
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag v${VERSION}
          git push origin v${VERSION}

      - name: Get previous tag
        id: prev_tag
        run: |
          git fetch --tags
          PREV=$(git tag --sort=-creatordate | grep -E "^v[0-9]+(_fix[0-9]+)?$" | head -n 2 | tail -n 1)
          echo "tag=$PREV" >> $GITHUB_OUTPUT

      - name: Generate changelog from commits
        id: changelog
        run: |
          echo "## v${VERSION}" > changelog.txt
          echo "" >> changelog.txt
          if [ -n "${{ steps.prev_tag.outputs.tag }}" ]; then
            echo "Commits since \`${{ steps.prev_tag.outputs.tag }}\`:" >> changelog.txt
            git log ${{ steps.prev_tag.outputs.tag }}..HEAD --oneline >> changelog.txt
          else
            echo "Initial release" >> changelog.txt
            git log --oneline >> changelog.txt
          fi
          cat changelog.txt

      - name: Create GitHub Issue
        run: |
          echo "Release created by ${{ github.actor }} on $(date -u)" > release-body.txt
          echo "" >> release-body.txt
          cat changelog.txt >> release-body.txt
          echo "" >> release-body.txt
          echo "Image: $REGISTRY:${VERSION}" >> release-body.txt

          gh issue create \
            --title "Release v${VERSION}" \
            --body-file release-body.txt \
            --repo ${{ github.repository }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update CHANGELOG.md
        run: |
          cat changelog.txt > temp-changelog.md
          echo "" >> temp-changelog.md
          cat CHANGELOG.md >> temp-changelog.md
          mv temp-changelog.md CHANGELOG.md

          git add CHANGELOG.md
          git commit -m "docs: update CHANGELOG for v${VERSION}"
          git push origin releases/${VERSION}
