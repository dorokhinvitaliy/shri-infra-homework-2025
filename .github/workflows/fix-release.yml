name: Fix Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version to fix (e.g. 3)"
        required: true

jobs:
  fix-release:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.event.inputs.version }}
      FIX_NUMBER: ${{ github.run_number }}
      REGISTRY: cr.yandex/crpcntqudb0hkbbnds00/app

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Checkout release branch
        run: git checkout releases/$VERSION

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run type checks and tests
        run: |
          npm run lint
          npm test

      - name: Build Docker image
        run: |
          docker build -t $REGISTRY:${VERSION}_fix${FIX_NUMBER} .
          docker tag $REGISTRY:${VERSION}_fix${FIX_NUMBER} $REGISTRY:${VERSION}_latest

      - name: Login to Yandex Container Registry
        run: echo "${{ secrets.YC_CR_PASSWORD }}" | docker login -u oauth --password-stdin cr.yandex

      - name: Push Docker image
        run: |
          docker push $REGISTRY:${VERSION}_fix${FIX_NUMBER}
          docker push $REGISTRY:${VERSION}_latest

      - name: Create Git tag
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git tag v${VERSION}_fix${FIX_NUMBER}
          git push origin v${VERSION}_fix${FIX_NUMBER}

      - name: Get previous tag
        id: prev_tag
        run: |
          git fetch --tags
          PREV=$(git tag --sort=-creatordate | grep -E "^v${VERSION}(_fix[0-9]+)?$" | head -n 2 | tail -n 1)
          echo "tag=$PREV" >> $GITHUB_OUTPUT

      - name: Get commit list
        run: |
          PREV_TAG="${{ steps.prev_tag.outputs.tag }}"
          if [ -n "$PREV_TAG" ]; then
            echo "**Commits since \`$PREV_TAG\`:**" > commits.txt
            git log "$PREV_TAG"..HEAD --pretty=format:'- %h %s' >> commits.txt
          else
            echo "**Commits:**" > commits.txt
            git log --pretty=format:'- %h %s' >> commits.txt
          fi

      - name: Comment on GitHub issue
        run: |
          gh issue comment $(gh issue list --limit 1 --search "Release v$VERSION" --json number --jq '.[0].number') \
            --body "$(echo -e "🛠 Fix \`#${FIX_NUMBER}\` for Release **v${VERSION}**\n📅 Date: $(date -u)\n👤 Author: @${{ github.actor }}\n🐳 Docker Image: \`${REGISTRY}:${VERSION}_fix${FIX_NUMBER}\`\n\n"; cat commits.txt)"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
