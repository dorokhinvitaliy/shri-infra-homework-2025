name: Release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.run_number }}
      REGISTRY: cr.yandex/crpcntqudb0hkbbnds00/app

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm ci
      - run: npm run lint
      - run: npm test

      - name: Ensure on main branch
        run: git checkout main

      - name: Create release branch
        run: |
          git checkout -b releases/${{ env.VERSION }}
          git push origin releases/${{ env.VERSION }}

      - name: Build Docker image
        run: |
          docker build -t $REGISTRY:${{ env.VERSION }} .
          docker tag $REGISTRY:${{ env.VERSION }} $REGISTRY:${{ env.VERSION }}_latest

      - name: Login to Yandex Container Registry
        run: echo "${{ secrets.YC_CR_PASSWORD }}" | docker login --username oauth --password-stdin cr.yandex

      - name: Push Docker images
        run: |
          docker push $REGISTRY:${{ env.VERSION }}
          docker push $REGISTRY:${{ env.VERSION }}_latest

      - name: Create Git tag
        run: |
          git tag v${{ env.VERSION }}
          git push origin v${{ env.VERSION }}

      - name: Get previous release tag
        id: prev_tag
        run: |
          git fetch --tags
          echo "tag=$(git describe --tags --abbrev=0 2>/dev/null || echo initial)" >> $GITHUB_OUTPUT

      - name: Generate changelog from commits
        id: changelog
        run: |
          if [ "${{ steps.prev_tag.outputs.tag }}" = "initial" ]; then
            git log --oneline > commits.txt
          else
            git log ${{ steps.prev_tag.outputs.tag }}..HEAD --oneline > commits.txt
          fi
          cat commits.txt

      - name: Create GitHub Issue
        run: |
          echo "Release created by ${{ github.actor }} on $(date -u)" > release-body.txt
          echo "" >> release-body.txt
          echo "Commits since **${{ steps.prev_tag.outputs.tag }}**:" >> release-body.txt
          cat commits.txt >> release-body.txt
          echo "" >> release-body.txt
          echo "Image: $REGISTRY:${{ env.VERSION }}" >> release-body.txt

          gh issue create \
            --title "Release v${{ env.VERSION }}" \
            --body-file release-body.txt \
            --repo ${{ github.repository }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update CHANGELOG.md
        run: |
          echo "## v${{ env.VERSION }}" > new_changelog.txt
          cat commits.txt >> new_changelog.txt
          echo "" >> new_changelog.txt
          cat CHANGELOG.md >> new_changelog.txt
          mv new_changelog.txt CHANGELOG.md
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add CHANGELOG.md
          git commit -m "docs: update CHANGELOG for v${{ env.VERSION }}"
          git push origin releases/${{ env.VERSION }}
