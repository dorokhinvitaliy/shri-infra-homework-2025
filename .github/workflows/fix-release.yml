name: Fix Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version to fix (e.g. 3)"
        required: true

jobs:
  fix-release:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.event.inputs.version }}
      FIX_NUMBER: ${{ github.run_number }}
      REGISTRY: cr.yandex/crpcntqudb0hkbbnds00/app

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm ci

      - name: Run lint and tests
        run: |
          npm run lint
          npm test

      - name: Docker login
        run: echo "${{ secrets.YC_CR_PASSWORD }}" | docker login -u oauth --password-stdin cr.yandex

      - name: Build and push Docker image
        run: |
          IMAGE=$REGISTRY:${VERSION}_fix${FIX_NUMBER}
          LATEST=$REGISTRY:${VERSION}_latest

          docker build -t $IMAGE .
          docker tag $IMAGE $LATEST

          docker push $IMAGE
          docker push $LATEST

      - name: Create Git tag
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git tag v${VERSION}_fix${FIX_NUMBER}
          git push origin v${VERSION}_fix${FIX_NUMBER}

      - name: Generate issue body for fix
        run: |
          DATE=$(date '+%Y-%m-%d')
          AUTHOR=${{ github.actor }}
          IMAGE=$REGISTRY:${VERSION}_fix${FIX_NUMBER}

          git fetch --tags

          PREV_TAG=$(git tag --sort=-creatordate | grep -E "^v${VERSION}(_fix[0-9]+)?$" | sed -n '2p')

          if [ -z "$PREV_TAG" ]; then
            echo "No previous tag found"
            git log --pretty=format:'- %h %s' > fix_commits.txt
          else
            echo "Previous tag: $PREV_TAG"
            git log --pretty=format:'- %h %s' $PREV_TAG..HEAD > fix_commits.txt
          fi

          {
            echo "## 🛠 Фикс релиза v${VERSION}_fix${FIX_NUMBER}"
            echo ""
            echo "**📅 Дата:** $DATE"
            echo "**👤 Автор:** $AUTHOR"
            echo "**🐳 Docker-образ:** \`$IMAGE\`"
            echo ""
            echo "**📄 Коммиты с момента тега \`${PREV_TAG:-N/A}\`:**"
            cat fix_commits.txt
          } > fix.md

      - name: Create issue for fix
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: "Fix Release v${{ env.VERSION }}_fix${{ env.FIX_NUMBER }}"
          content-filepath: ./fix.md
