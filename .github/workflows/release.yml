name: Release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.run_number }}
      REGISTRY: cr.yandex/crpcntqudb0hkbbnds00/app

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --tags

      - name: Ensure on main branch
        run: git checkout main

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install deps & test
        run: |
          npm ci
          npm run lint
          npm test

      - name: Create release branch
        run: |
          git checkout -b releases/${{ env.VERSION }}
          git push origin releases/${{ env.VERSION }}

      - name: Docker login
        run: echo "${{ secrets.YC_CR_PASSWORD }}" | docker login -u oauth --password-stdin cr.yandex

      - name: Build and push Docker image
        run: |
          docker build -t $REGISTRY:${VERSION} .
          docker tag $REGISTRY:${VERSION} $REGISTRY:${VERSION}_latest
          docker push $REGISTRY:${VERSION}
          docker push $REGISTRY:${VERSION}_latest

      - name: Create git tag
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag v${VERSION}
          git push origin v${VERSION}

      - name: Get commit list since previous tag
        run: |
          PREV_TAG=$(git tag --sort=-creatordate | grep -E "^v[0-9]+(_fix[0-9]+)?$" | sed -n '2p')
          echo "PREV_TAG=$PREV_TAG" >> $GITHUB_ENV

          if [ -z "$PREV_TAG" ]; then
            git log --pretty=format:'- %h %s' > commits.txt
          else
            git log --pretty=format:'- %h %s' $PREV_TAG..HEAD > commits.txt
          fi

      - name: Build release.md
        run: |
          echo "## Релиз v${VERSION}" > release.md
          echo "" >> release.md
          echo "**Дата:** $(date '+%Y-%m-%d')" >> release.md
          echo "**Автор:** ${{ github.actor }}" >> release.md
          echo "**Версия:** v${VERSION}" >> release.md
          echo "**Docker-образ:** $REGISTRY:${VERSION}" >> release.md
          echo "" >> release.md
          echo "**Коммиты:**" >> release.md
          cat commits.txt >> release.md

      - name: Create GitHub issue
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: "Release v${{ env.VERSION }}"
          content-filepath: ./release.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update CHANGELOG.md
        run: |
          git checkout releases/${VERSION}
          git pull origin releases/${VERSION}

          git config user.name github-actions
          git config user.email github-actions@github.com

          DATE=$(date '+%Y-%m-%d')
          echo "## v${VERSION} - $DATE" > temp.md
          echo "" >> temp.md
          cat commits.txt >> temp.md

          if [ -f CHANGELOG.md ]; then
            echo "" >> temp.md
            cat CHANGELOG.md >> temp.md
          fi

          mv temp.md CHANGELOG.md

          git add CHANGELOG.md
          git commit -m "docs: update changelog for v${VERSION}"
          git push origin releases/${VERSION}
